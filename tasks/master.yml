- name: install icinga2 packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - icinga2-common
    - icinga2-bin
    #- icinga2-python
    - icinga2
    - icinga2-ido-pgsql
    - icingaweb2
    - icingaweb2
    - python-carbon
    - python-whisper
    - graphite-web
    - libXrender
    - libX11
    - nagios-plugins
    - nagios-plugins-ping
    - nagios-plugins-nrpe
    - nagios-plugins-disk
    - nagios-plugins-load
    - nagios-plugins-users
    - nagios-plugins-procs
    - nagios-plugins-swap
    - nagios-plugins-ssh
    - nagios-plugins-tcp
    #- nagios-plugins-check_rbl
    - nagios-plugins-by_ssh
    - nagios-plugins-dig
    - nagios-plugins-http
    - nagios-plugins-smtp
    - nagios-plugins-dns
    - nagios-plugins-snmp
    #- nagion-plugins-check_snmp_printer
    #- nagios-plugins-check_iostat

- name: copy main icinga2 configuration files
  template:
    src: "{{ item }}"
    dest: "/etc/icinga2/{{ item }}"
    owner: icinga
    group: icinga
    mode: 0550
    setype: etc_t
  with_items:
    - icinga2.conf
    - zones.conf
    - constants.conf

- name: copy features configuration files into icinga2 feature activation directory
  action: template src={{ item }} dest=/etc/icinga2/features-available/{{ item }}
  with_items:
    - api.conf
    - ido-pgsql.conf
    - graphite.conf

- name: activate icinga2 features
  action: command /usr/sbin/icinga2 feature enable {{ item }}
  with_items:
    - ido-pgsql
    - graphite

- name: check if a configuration already exists
  action: stat path=/etc/icinga2/conf.d/templates.conf
  register: defaultconfig

- name: remove default configuration
  action: file dest=/etc/icinga2/conf.d state=absent
  when: defaultconfig.stat.isdir is defined and defaultconfig.stat.isdir == false

- name: create configuration directory
  action: file dest=/etc/icinga2/conf.d owner=icinga group=icinga mode=550 setype=etc_t state=directory

- name: create the conf.d folders
  action: file dest=/etc/icinga2/{{ item }} owner=icinga group=icinga mode=550 setype=etc_t state=directory
  with_items:
    - conf.d
    - conf.d/hosts
    - conf.d/templates/
    - conf.d/commands/

- name: copy templated icinga2 config files
  template:
    src: "{{ item.src }}"
    dest: "/etc/icinga2/conf.d/{{ item.dest }}"
    owner: icinga
    groupi: icinga
    mode: 0550
    setype: etc_t
  with_items:
    - src: users.conf
      dest: users.conf
    - src: timeperiods.conf
      dest: timeperiods.conf
    - src: downtimes.conf
      dest: downtimes.con
    - src: groups.conf
      dest: groups.conf
    - src: commands_check.conf
      dest: commands/check.conf
    - src: commands_notifications.conf
      dest: commands/notifictions.conf
    - src: templates_users.conf
      dest: templates/users.conf
    - src: templates_services.conf
      dest: templates/services.conf
    - src: templates_hosts.conf
      dest: templates/hosts.conf
    - src: templates_schedules.conf
      dest: templates/schedules.conf
    - src: templates_notifications.conf
      dest: templates/notifications.conf

- name: create the zone folders
  file:
    dest: "/etc/icinga2/zones.d/{{ item.zonename }}"
    owner: icinga
    group: icinga
    mode: 0550
    setype: etc_t
    state: directory
  with_items: icinga2_zones

- name: create the pki folders
  file:
    dest: /etc/icinga2/pki
    owner: icinga
    group: icinga
    mode: 0550
    setype: etc_t
    state: directory

- name: copy ca.crt file in the pki folder
  copy:
    src: ca.crt
    dest: /etc/icinga2/pki/ca.crt

- name: setup pki certificates for zones to talk to each other
  copy:
    src: "/drives/datadrive/.home/.ansible/.certs/icinga2/{{ item.nodename }}.crt"
    dest: "/etc/icinga2/pki/{{ item.nodename }}.crt"
  with_items: icinga2_zones

- name: setup pki private keys for zones to talk to each other
  copy:
    src: "/drives/datadrive/.home/.ansible/.certs/icinga2/{{ item.nodename }}.key"
    dest: "/etc/icinga2/pki/{{ item.nodename }}.key"
  with_items: icinga2_zones

- name: enable http to talk to db
  seboolean:
    name: httpd_can_network_connect_db
    state: yes
    persistent: yes
